require 'sinatra'
require_relative 'lib/inquizitive.rb'
set :bind, "0.0.0.0"
configure :development do
  DataMapper.setup(:default, "sqlite://#{Dir.pwd}/inquizitive.db")
end

configure :production do
  DataMapper.setup(:default, ENV['DATABASE_URL'])
end

enable :sessions

get '/' do
  erb :index
end

post '/sign-in' do
  result = SignIn.run({:username => params[:username], :password => params[:password]})
  if result.success?
    @message = "It worked #{result.user.username}"

    session[:key] = result.session_id
    redirect to ("/home")
  else
    @message = "#{result.error}"
  end
end

get '/sign-up' do
  erb :"sign-up"
end

post '/sign-up' do
  @user = User.new(:username => params[:username], :password => params[:password], :phone_number => params[:phone_number].delete("^0-9"))
  # result = SignUp.run({:username => params[:username], :password => params[:password], :phone_number => params[:phone_number]})
  if @user.valid?
    @user.save
    @message = "user created!"
  else
    puts @user.errors.inspect
    # @user.errors.each do |e|
    #   puts e
    # end
    # @message = @user[:messages]

  end
  erb :index
end

<<<<<<< HEAD
get "/home" do
  key = session[:key]
  sess = Session.get(session[:key])
  @user = User.get(sess.user_id)
  erb :home

end
=======
get '/create-question' do
  erb :"create-question"
end

post '/create-question' do
  erb :"create-question"
end

get '/create-question-set' do
  erb :"create-question-set"
end

post '/create-question-set' do
  erb :"create-question-set"
end

>>>>>>> 9a0a7f59ac59f2cc2e6acc2ab8397bf8da953b62
